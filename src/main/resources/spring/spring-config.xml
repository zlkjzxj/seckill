<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!--配置整合mybatis过程-->
    <!--1.配置数据库相关参数-->
    <context:property-placeholder location="classpath:jdbc.properties"/>

    <!--配置数据库连接池-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!--连接池属性-->
        <property name="driverClass" value="${driver}"/>
        <property name="jdbcUrl" value="${url}"/>
        <property name="user" value="${name}"/>
        <property name="password" value="${password}"/>

        <!--c3p0连接池的私有属性-->
        <!--最大默认是15，最小是3-->
        <property name="maxPoolSize" value="30"/>
        <property name="minPoolSize" value="10"/>
        <!--关闭链接后不自动commit，默认是false-->
        <property name="autoCommitOnClose" value="false"/>
        <!--默认是0，无限等待  这个项目启动报错，去掉就好了-->
        <!--<property name="checkoutTimeout" value="1000"/>-->
        <!--获取链接失败尝试次数-->
        <property name="acquireRetryAttempts" value="2"/>
    </bean>

    <!--约定大于配置-->
    <!--配置sqlSessionFactory对象-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--注入数据库连接池-->
        <property name="dataSource" ref="dataSource"/>

        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!--扫描entity包，使用别名 即com.waSeckillkill -Seckill 当有多个可以用分号隔开-->
        <property name="typeAliasesPackage" value="com.walle.entity"/>
        <!--扫描sql配置文件：mapper需要的xml文件-->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>

    <!--配置扫描Dao接口包，同台实现到接口，注入到spring容器中。-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--注入sqlSessionFactory 为了防止MapperScannerConfigurer启动时像jdbc.properties这样的文件还没加载而报错，
        所以通过beanName后处理方式，在用的时候才回去查找-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
        <!--给出需要扫描包接口-->
        <property name="basePackage" value="com.walle.dao"/>
    </bean>
</beans>